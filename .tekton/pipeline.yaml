apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pipeline
spec:
  params:
    - name: repository
    - name: revision
    - name: apikey
    - name: base-name
    - name: resource-group
    - name: region
    - name: cluster-name
    - name: cluster-namespace
    - name: registry-namespace
  workspaces:
  - name: pipeline-pvc
  tasks:
    - name: clone-repo
      taskRef:
        name: git-clone-repo
      params:
        - name: repository
          value: $(params.repository)
        - name: branch
          value: ""
        - name: revision
          value: $(params.revision)
      workspaces:
      - name: output
        workspace: pipeline-pvc
    - name: build-image
      taskRef:
        name: icr-containerize
      runAfter: [clone-repo]
      params:
        - name: registry-region
          value: $(params.region)
        - name: registry-namespace
          value: $(params.registry-namespace)
        - name: image-name
          value: "$(params.base-name)-image"
        - name: resource-group
          value: $(params.resource-group)
      workspaces:
      - name: source
        workspace: pipeline-pvc
    - name: deploy-app
      taskRef:
        name: iks-deploy-to-kubernetes
      runAfter: [build-image]
      params:
        - name: resource-group
          value: $(params.resource-group)
        - name: cluster-region
          value: $(params.region)
        - name: cluster-name
          value: $(params.cluster-name)
        - name: image-url
          value: "$(tasks.build-image.results.image-repository):latest"
        - name: script
          value: |
            cat deployment.yml | \
              IMAGE_URL=$PIPELINE_IMAGE_URL \
              envsubst '$IMAGE_URL' \
              | \
              kubectl apply --namespace $(params.cluster-namespace) -f - || exit 1
      workspaces:
      - name: artifacts
        workspace: pipeline-pvc
